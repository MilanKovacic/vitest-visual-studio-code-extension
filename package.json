{
  "name": "vitest-lab",
  "displayName": "Vitest Lab",
  "version": "0.3.0",
  "description": "Run and debug Vitest test cases",
  "icon": "img/icon.png",
  "preview": true,
  "keywords": [
    "vitest",
    "test",
    "typescript",
    "javascript"
  ],
  "license": "MIT",
  "author": "zxch3n",
  "publisher": "milan-kovacic",
  "repository": {
    "type": "git",
    "url": "https://github.com/MilanKovacic/vitest-visual-studio-code-extension.git"
  },
  "bugs": {
    "url": "https://github.com/MilanKovacic/vitest-visual-studio-code-extension/issues"
  },
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Testing"
  ],
  "activationEvents": [
    "onCommand:vitest-explorer.configureTest",
    "workspaceContains:**/vitest.config.js",
    "workspaceContains:**/vite.config.js",
    "workspaceContains:**/vitest.config.ts",
    "workspaceContains:**/vite.config.ts",
    "workspaceContains:**/package.json"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "title": "Update Snapshot",
        "command": "vitest.updateSnapshot",
        "category": "Vitest"
      },
      {
        "title": "Start Watch Mode",
        "command": "vitest.startWatching",
        "category": "Vitest"
      },
      {
        "title": "Stop Watch Mode",
        "command": "vitest.stopWatching",
        "category": "Vitest"
      },
      {
        "title": "Toggle Watch Mode",
        "command": "vitest.toggleWatching",
        "category": "Vitest"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vitest.updateSnapshot",
          "when": "false"
        },
        {
          "command": "vitest.startWatching",
          "when": "false"
        },
        {
          "command": "vitest.stopWatching",
          "when": "false"
        }
      ],
      "testing/item/context": [
        {
          "command": "vitest.updateSnapshot"
        }
      ]
    },
    "configuration": {
      "title": "Vitest",
      "properties": {
        "vitest.enable": {
          "description": "This plugin will try to detect whether the current project is set up with Vitest to activate itself. When it failed, you can enable the plugin manually.",
          "type": "boolean",
          "scope": "resource",
          "default": false
        },
        "vitest.commandLine": {
          "markdownDescription": "The command line to start vitest tests. **It should have with the ability to append extra arguments**. For example `npx vitest` or `yarn test --`\n\nThis is a workspace setting. Do not change it in the user setting directly, which will affect all the projects you open",
          "type": "string",
          "scope": "resource",
          "default": ""
        },
        "vitest.include": {
          "markdownDescription": "Include glob for test files. Default: `[\"**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}\"]`",
          "type": "array",
          "default": [
            "**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}"
          ],
          "scope": "resource"
        },
        "vitest.exclude": {
          "markdownDescription": "Exclude globs for test files. \nDefault: `[\"**/node_modules/**\", \"**/dist/**\", \"**/cypress/**\", \"**/.{idea,git,cache,output,temp}/**\"]`",
          "type": "array",
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/cypress/**",
            "**/.{idea,git,cache,output,temp}/**"
          ],
          "scope": "resource"
        },
        "vitest.debugExclude": {
          "markdownDescription": "Automatically skip files covered by these glob patterns. \nDefault: `[\"<node_internals>/**\", \"**/node_modules/**\"]`",
          "type": "array",
          "default": [
            "<node_internals>/**",
            "**/node_modules/**"
          ],
          "scope": "resource"
        },
        "vitest.nodeEnv": {
          "markdownDescription": "The env passed to runner process in addition to `process.env`",
          "type": [
            "object",
            "null"
          ],
          "default": null,
          "scope": "resource"
        },
        "vitest.showFailMessages": {
          "description": "Get instant feedback when using Watch Mode. Pop-ups an error when a test fails.",
          "type": "boolean",
          "scope": "window",
          "default": false
        },
        "vitest.changeBackgroundColor": {
          "description": "Change background color of status bar item on failing tests.",
          "type": "boolean",
          "scope": "window",
          "default": true
        },
        "vitest.disabledWorkspaceFolders": {
          "description": "Disabled workspace folders names in multiroot environment",
          "type": "array",
          "scope": "resource",
          "default": []
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsup ./src/extension.ts --external vscode,lightningcss,esbuild --minify",
    "watch": "tsup ./src/extension.ts --external vscode,lightningcss,esbuild --watch --sourcemap",
    "test": "vitest run",
    "lint:check": "eslint .",
    "lint:fix": "eslint . --fix",
    "prettier:check": "prettier --check .",
    "prettier:fix": "prettier --write ."
  },
  "devDependencies": {
    "@antfu/eslint-config": "^2.6.2",
    "@babel/parser": "^7.23.6",
    "@babel/types": "^7.23.6",
    "@rauschma/stringio": "^1.4.0",
    "@types/fs-extra": "^11.0.4",
    "@types/glob": "^8.1.0",
    "@types/node": "^20.11.4",
    "@types/semver": "^7.5.6",
    "@types/vscode": "^1.77.0",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vitest/ws-client": "^1.2.0",
    "@vscode/test-electron": "^2.3.8",
    "@vue/reactivity": "^3.4.14",
    "@vueuse/core": "^10.7.2",
    "eslint": "^8.2.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-only-warn": "^1.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-tsdoc": "^0.2.17",
    "eslint-plugin-unicorn": "^50.0.1",
    "fs-extra": "^11.2.0",
    "fuse.js": "^7.0.0",
    "get-port": "^7.0.0",
    "glob": "^10.3.10",
    "mighty-promise": "^0.0.10",
    "minimatch": "^9.0.3",
    "mocha": "^10.2.0",
    "prettier": "^3.2.2",
    "semver": "^7.5.4",
    "tree-kill": "^1.2.2",
    "tsup": "^8.0.1",
    "typescript": "^5.3.3",
    "vite": "^5.0.11",
    "vitest": "latest",
    "ws": "^8.16.0"
  },
  "lint-staged": {
    "*.{js,ts,tsx,vue,md}": [
      "eslint --fix"
    ]
  }
}
